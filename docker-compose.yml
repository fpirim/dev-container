services:
  
  dev:
    build:
      context: .
      target: dev-container
      args:
        SSH_AUTHORIZED_KEYS: ${SSH_AUTHORIZED_KEYS}
    image: ${DOMAIN}/dev-container
    networks:
      - proxy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: code-server --bind-addr 0.0.0.0:9394 --auth none --disable-telemetry /home/ubuntu/workspace
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - M2_DATA:/home/ubuntu/.m2
      - NPM_DATA:/home/ubuntu/.npm
      - WORKSPACE_DATA:/home/ubuntu/workspace
#    labels:
#     - "traefik.enable=true"
#     # application
#     - "traefik.http.routers.app-dev.rule=Host(`${DOMAIN}`)"
#     - "traefik.http.routers.app-dev.entrypoints=https"      
#     - "traefik.http.routers.app-dev.tls=true"
#     - "traefik.http.routers.app-dev.tls.certresolver=${CERTRESOLVER}"
#     - "traefik.http.services.app-dev.loadbalancer.server.port=9060"
#     - "traefik.http.routers.app-dev.service=app-dev"
#     # code server
#     - "traefik.http.routers.vscode-dev.rule=Host(`vscode${DOMAIN}`)"
#     - "traefik.http.routers.vscode-dev.entrypoints=https"      
#     - "traefik.http.routers.vscode-dev.tls=true"
#     - "traefik.http.routers.vscode-dev.tls.certresolver=${CERTRESOLVER}"
#     - "traefik.http.routers.vscode-dev.service=vscode-dev"
#     - "traefik.http.services.vscode-dev.loadbalancer.server.port=9394"
#      # ssh server
#     - "traefik.tcp.routers.dev-ssh.rule=HostSNI(`*`)"
#     - "traefik.tcp.routers.dev-ssh.entrypoints=ssh"      
#     - "traefik.tcp.routers.dev-ssh.service=dev-ssh"
#     - "traefik.tcp.services.dev-ssh.loadbalancer.server.port=22"
    
volumes:
  M2_DATA:
  NPM_DATA:
  WORKSPACE_DATA:

networks:
  proxy:
    external: true